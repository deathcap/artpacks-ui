// Generated by CoffeeScript 1.7.0
(function() {
  var APSelector;

  module.exports = function(artPacks) {
    return new APSelector(artPacks);
  };

  APSelector = (function() {
    function APSelector(artPacks) {
      this.artPacks = artPacks;
      this.container = document.createElement('div');
      this.refresh();
      this.artPacks.on('loadedAll', this.refresh.bind(this));
    }

    APSelector.prototype.refresh = function() {
      var node, pack, _i, _len, _ref, _results;
      while (this.container.lastChild) {
        this.container.removeChild(this.container.lastChild);
      }
      _ref = this.artPacks.packs;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pack = _ref[_i];
        if (pack == null) {
          continue;
        }
        node = document.createElement('div');
        node.setAttribute('draggable', 'true');
        node.setAttribute('style', 'border: 1px solid black; -webkit-user-select: none; -moz-user-select: none; cursor: move; margin: 10px;');
        node.textContent = pack.toString();
        node.addEventListener('dragstart', this.onDragStart.bind(this, node), false);
        node.addEventListener('dragenter', this.onDragEnter.bind(this, node), false);
        node.addEventListener('dragover', this.onDragOver.bind(this, node), false);
        node.addEventListener('dragleave', this.onDragLeave.bind(this, node), false);
        _results.push(this.container.appendChild(node));
      }
      return _results;
    };

    APSelector.prototype.onDragStart = function(node) {};

    APSelector.prototype.onDragEnter = function(node) {};

    APSelector.prototype.onDragOver = function(node) {};

    APSelector.prototype.onDragLeave = function(node) {};

    return APSelector;

  })();

}).call(this);
